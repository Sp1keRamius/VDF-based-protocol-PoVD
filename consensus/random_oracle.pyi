class RandomOracleRoot:
    DIGEST_LENGTH: int

    def __init__(self) -> None: ...
    def get_mining_oracle(self, max_calls: int) -> "RandomOracleMining": ...
    def get_verifying_oracle(self, miner_id: list[int]) -> "RandomOracleVerifying": ...
    def reset_counters(self, oracles: list["RandomOracleMining"]) -> None: ...

class RandomOracleMining:
    DIGEST_LENGTH: int
    max_calls: int

    def __init__(self, max_calls: int, _private_key: bytes) -> None: ...
    def hash(self, input_data: bytes) -> bytes: ...
    def reset_counter(self, key: bytes) -> None: ...
    def get_current_calls(self) -> int: ...

class RandomOracleVerifying:
    DIGEST_LENGTH: int

    def __init__(self, miner_id: list[int], _private_key: bytes) -> None: ...
    def hash(self, input_data: bytes) -> bytes: ...