[EnvironmentSettings]
; total_height=200000
; Total block height generated before simulation stops.
total_round=1500000
; Total rounds before simulation stops.
process_bar_type=round
; Set the style of process bar: round/height
miner_num=20
; Total miner number in network.
blocksize=0
; Block size in MB. Only effective when dataitem_enable=False and network_type is TopologyNetwork or AdhocNetwork.
consensus_type=consensus.PoW
; consensus_type=consensus.VirtualPoW
; VirtualPoW means a lightweight simulation mode, which replaces hash calculation with random number.
; consensus_type=consensus.SolidPoW
; SolidPoW means a strict simulation mode, where RandomOracle is used to control the maximum hash times each round.
; network_type=network.TopologyNetwork
; network_type=network.AdHocNetwork
; network_type=network.StochPropNetwork
network_type=network.DeterPropNetwork
; network_type=network.SynchronousNetwork
show_fig=False
; Show figures during simulation.
log_level=warning
compact_outputfile=True
; If True, simplify log and result outputs to reduce disk space consumption.
common_prefix_enable = False
; If True, evaluate common prefix pdf. 

[DataItemSettings]
dataitem_enable=False
; If True, data items will be generated and contained in blocks.
max_block_capacity=10
; The maximum number of data items that a block can contain. max_block_capacity=0 will disable the dataitem mechanism.
dataitem_size=1
; The size of each dataitem in MB.
dataitem_input_interval=0
; The interval of dataitem input in rounds. dataitem_input_interval=0 will enable a global dataitem queue.

[ConsensusSettings]
q_ave=10
; Average hash rate, the average number of hash operation per round.
; q_ave can be a decimal number for lightweight simulation.
q_distr=equal
; 'equal': all miners have equal hash rate; 'rand' means q satisfies gaussion distribution.
target=000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
; A hexadecimal number serving as the target value for PoW hashing puzzles.
average_block_time=0
; The average number of rounds required for the entire network to generate a block.
; If average_block_time=0, 'target' becomes effective, otherwise, 'target' will be calculated based on 'average_block_time', 'miner_num', and 'q_ave'.
N=1
; The number of block confirmations required for the transactoins in a block to be considered valid.
; Used to calculate attack success rate.

[AttackSettings]
adver_num = 0
; Total number of adversaries. adver_num must be set.
; adver_lists=(1,2,3)
; Specify id of adversaries. If adversary_ids is set, 'adver_num' will not take effect.

; #1
; attack_type = HonestMining

; #2
; attack_type = SelfishMining

; #3
; attack_type = DoubleSpending
; attack_arg = {'attack_type': 'DoubleSpending', 'Ng': 2}
; attacker usually will stop working and give up if it is Ng blocks behind
; attacker wait until the attacked block receives enough confirmations (say, N blocks)

; #4
; attack_type = EclipsedDoubleSpending
; attack_arg = {'eclipse_target': (0,), 'Ng': 2}
; Eclipse only work in the TopologyNetwork
; please check the network_type when using Eclipse




[DeterPropNetworkSettings]
prop_vector=[0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0]
; Propagation vector. The elements represent 
; the rate of received miners when (1,2,3...) rounds passed.
; The last element must be 1.0 .

[StochPropNetworkSettings]
rcvprob_start=0.01
; Initial receive probability when a block access network.
rcvprob_inc=0.01
; Increment of receive probability per round.
stat_prop_times=[0.03, 0.05, 0.08, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.93,0.95,0.98, 1.0]
; The block propagtion times for different rates of received miners that required statistics. 

[TopologyNetworkSettings]
init_mode=adj
; coo/adj/rand
; coo: load adjecent matrix in COOrdinate format (from conf/topologies/circular16_coo.csv by default).
; adj: load adjecent matrix (from conf/topologies/default_adj.csv by default).
; rand: randomly generate a network.
; topology_path=conf/topologies/default_adj.csv
; The path to the topology file in a csv format that matches 'init_mode' (relative to current path)
; Comment 'topology_path' option for default topology path.
bandwidth_honest=5
; Set bandwidth between honest miners and between the honest and adversaries(MB/round)
bandwidth_adv=5 
; Set bandwidth between adversaries(MB/round)
rand_mode=binomial
; homogeneous/binomial
; homogeneous: try to keep the degree of each node the same.
; binomial: set up edges with probability ave_degree/(miner_num-1) for each node.
ave_degree=5
; If gen_net_approach is'rand', set the average degree.[Only works when gen_net_approach=rand]
stat_prop_times=[0.03, 0.05, 0.08, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.93,0.95,0.98, 1.0]
; The block propagtion times for different rates of received miners that required statistics. 

outage_prob=0
; The outage probability of each link.
enable_resume_transfer = True
; Whether to resume transmission from the outage point;
; If False, the message will be resent completely in the next round.

dynamic=False
; If the network topology can dynamically change.
avg_tp_change_interval=10
; [Only works when dynamic=true]
edge_remove_prob=0.05
; [Only works when dynamic=true]
edge_add_prob=0.1
; [Only works when dynamic=true]
max_allowed_partitions=1
; [Only works when dynamic=true]

save_routing_history=True
; Save routing history or not.
save_routing_graph=False
; Genarate routing graph at the end of simulation or not. If True, the process may be long;
; `compact_outputfile` should be `False` to enable `save_routing_graph` to work.
show_label=False
; Show edge labels on network and routing graph or not. If miner_num is large, graphs with label are hard to see clearly. 

[AdHocNetworkSettings]
init_mode=rand
; only rand supportted
ave_degree=5
; If gen_net_approach is'rand', set the average degree.[Only works when gen_net_approach=rand]
segment_size=0.5
; Message segmentation size(MB); The complete message is divided into several segments, with each segment having a propagation time of one round

region_width=100
; initiate a square region with the specified width
comm_range=30
; communication range
move_variance=5
; Variance of the movement when position updates in Gaussian random walk. 

outage_prob=0
; The outage probability of each link.
; When the link is interrupted, the message will be resent in the next round.

enable_large_scale_fading = True
; If large-scale fading is enabled, the segment size will be adjusted automatically according to the fading model.
path_loss_level = medium
; low/medium/high
bandwidth_max = 15
; MB/round; The max bandwidth is the bandwidth within the range of comm_range/100. 
; Other bandwidths at different distances are determined by the fading model.

stat_prop_times=[0.03, 0.05, 0.08, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.93,0.95,0.98, 1.0]
; The block propagtion times for different rates of received miners that required statistics. 